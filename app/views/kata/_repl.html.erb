<div id="repl-section">
    <div id="repl-terminal-container" >
    </div>
    <button type="button"
            id="restart-repl-button"
            title="(re)starts the REPL">
       Restart REPL
    </button>

</div>

<script type="text/javascript">

$(function() {
     function SocketManager(url, terminal) {
         this.socket = null;

         this.start(url, terminal);
     };

     SocketManager.prototype.start = function(url, terminal) {
         var that = this;

         this.socket = new WebSocket(url);

         this.socket.onopen = function(event) {
             console.log('socket opened');
             terminal.attach(that.socket);
             terminal._initialize = true;
         };

         this.socket.onclose = function(event) {
             console.log('socket closed');
             terminal.detach(that.socket);

             // If the close corresponds to nginx timing out the socket, then
             // restart it silently.
             if (event.code == 1006) {
                 that.start(url, terminal);
             }
         };

         this.socket.onerror = function(event) {
             terminal.writeln('Error connecting to REPL');
         };
     };

     SocketManager.prototype.close = function() {
         this.socket.close(1000, "User requested new REPL");
     };

     var terminalContainer = document.getElementById('repl-terminal-container') ;

     Terminal.applyAddon(attach);
     Terminal.applyAddon(fit);
     Terminal.applyAddon(fullscreen);
     Terminal.applyAddon(search);
     Terminal.applyAddon(winptyCompat);

     var term = new Terminal({
         cursorBlink: true, // optionElements.cursorBlink.checked,
         scrollback: 10, // parseInt(optionElements.scrollback.value, 10),
         tabStopWidth: 10 // parseInt(optionElements.tabstopwidth.value, 10)
     });

     window.term = term;
     term.open(terminalContainer);
     term.winptyCompatInit();
     term.fit();
     term.focus();

     var avatarName = "<%= @avatar.name %>";
     var kataId = "<%= @kata.id %>";

     var restartReplButton = $("#restart-repl-button");

     var urlId = kataId + '/' + avatarName;
     var replURL = 'http://' + location.hostname + '/repl/' + urlId;
     var socketURL = 'ws://' + location.hostname + '/repl_ws/' + urlId;
     var socket = null;

     var destroyRepl = function() {
           console.log('destroying repl');
           term.writeln('\n\r\033[31mREPL disconnected\033[0m');
           return fetch(replURL, {method: 'DELETE'});
     };

     var createRepl = function() {
         var form = restartReplButton.closest('form');

         term.writeln('\033[32mConnecting to REPL\033[0m');

         console.log('creating repl');

         cd.saveCodeFromSyntaxHighlightEditors();
         cd.storeOutgoingFileHashes();  // TODO: Necessary?

         var requestParams = {
             method: 'POST',
             body: JSON.stringify(form.serializeArray()),
             headers: {
                 'content-type': 'application/json'
             }};
         return fetch(replURL, requestParams);
     };

     createRepl().then(function() {
         socket = new SocketManager(socketURL, term);
     });

     restartReplButton.click(function() {
         socket.close();
         socket = null;
         destroyRepl()
             .then(createRepl)
             .then(function() {
                 socket = new SocketManager(socketURL, term);
             });
     });

     // TODO: How can we arrange for destroyRepl() to be called when the page closes?
 });

</script>
