<div id="repl-section">
    <div id="repl-terminal-container" >
    </div>
    <button type="button"
            id="restart-repl-button"
            title="(re)starts the REPL">
       Restart REPL
    </button>

</div>

<script type="text/javascript">

$(function() {
     var terminalContainer = document.getElementById('repl-terminal-container') ;

     Terminal.applyAddon(attach);
     Terminal.applyAddon(fit);
     Terminal.applyAddon(fullscreen);
     Terminal.applyAddon(search);
     Terminal.applyAddon(winptyCompat);

     var term = new Terminal({
         cursorBlink: true, // optionElements.cursorBlink.checked,
         scrollback: 10, // parseInt(optionElements.scrollback.value, 10),
         tabStopWidth: 10 // parseInt(optionElements.tabstopwidth.value, 10)
     });

     window.term = term;
     term.open(terminalContainer);
     term.winptyCompatInit();
     term.fit();
     term.focus();

     var avatarName = "<%= @avatar.name %>";
     var kataId = "<%= @kata.id %>";

     var restartReplButton = $("#restart-repl-button");

     var urlId = kataId + '/' + avatarName;
     var replURL = 'http://' + location.hostname + '/repl/' + urlId;
     var socketURL = 'ws://' + location.hostname + '/repl_ws/' + urlId;
     var socket = null;

     var resetSocket = function() {
         socket = new WebSocket(socketURL);

         socket.onopen = function(event) {
             console.log('socket opened');
             term.attach(socket);
             term._initialize = true;
         };

         socket.onclose = function(event) {
             console.log('socket closed');
             console.log('received close event');
             console.log(event);

             term.detach(socket);

             resetSocket();
         };

         socket.onerror = function(event) {
             console.log('socket error');
             console.log(event);
         };
     };

     var destroyRepl = function() {
         if (socket) {
             console.log('destroying repl');
             term.detach(socket);
             socket = null;

             term.clear();

             return fetch(replURL, {method: 'DELETE'});
         }
         else {
             return Promise.resolve();
         }
     };

     var createRepl = function() {
         var form = restartReplButton.closest('form');

         if (!socket) {
             console.log('creating repl');

             cd.saveCodeFromSyntaxHighlightEditors();
             cd.storeOutgoingFileHashes();  // TODO: Necessary?

             var requestParams = {
                 method: 'POST',
                 body: JSON.stringify(form.serializeArray()),
                 headers: {
                     'content-type': 'application/json'
                 }};
             return fetch(replURL, requestParams).then(resetSocket);
         }
         else {
             return Promise.resolve();
         }
     };

     restartReplButton.click(function() {
         destroyRepl().then(createRepl);
     });

     createRepl();

     // TODO: How can we arrange for destroyRepl() to be called when the page closes?
 });

</script>
